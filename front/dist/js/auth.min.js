function Auth(){this.maskwrapper=$(".mask-wrapper")}$(function(){$("#btn").click(function(){$(".mask-wrapper").show()}),$(".close-btn").click(function(){$(".mask-wrapper").hide()}),$(".auth-box").hover(function(){$(".user-more-boxs").show()},function(){$(".user-more-boxs").hide()})}),$(function(){$(".switch").click(function(){var o=$(".scroll-wrapper"),n=o.css("left");(n=parseInt(n))<0?o.animate({left:"0"}):o.animate({left:"-400px"})})}),Auth.prototype.run=function(){var o=this;o.listen(),o.listenlogin(),o.listenimg(),o.listenclick(),o.signup(),o.listenAuthBoxHover()},Auth.prototype.showEvent=function(){this.maskwrapper.show()},Auth.prototype.hideEvent=function(){this.maskwrapper.hide()},Auth.prototype.listenAuthBoxHover=function(){var o=$(".auth-box"),n=$(".user-more-box");o.click=function(){},o.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.listen=function(){var o=this,n=$(".signin-btn"),t=$(".signup-btn"),e=$(".close-btn"),s=$(".scroll-wrapper");n.click(function(){o.showEvent(),s.css({left:0})}),t.click(function(){o.showEvent(),s.css({left:-400})}),e.click(function(){o.hideEvent()})},Auth.prototype.listenlogin=function(){var o=$(".signin-group"),e=o.find("input[name='telephone']"),s=o.find("input[name='password']"),i=o.find("input[name='remember']");o.find(".submit-btn").click(function(){var o=e.val(),n=s.val(),t=i.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:o,password:n,remember:t?1:0},success:function(o){console.log(o),200===o.code?(console.log("sucsess"),window.messageBox.show("登录成功！！"),window.location.reload()):(meg=o.message,window.messageBox.show(message))},fail:function(o){console.log(o)}})})},$(function(){(new Auth).run()}),Auth.prototype.listenimg=function(){var o=$(".imgcapture");o.click(function(){o.attr("src","/account/img_capture/?random="+Math.random())})},Auth.prototype.reclick=function(){var o=this,n=$(".sms-captcha-btn");messageBox.showInfo("短信发送成功！"),n.addClass("disabled");var t=5;n.unbind("click");var e=setInterval(function(){n.text(t+"s"),(t-=1)<=0&&(clearInterval(e),n.removeClass("disabled"),n.text("发送验证码"),o.listenclick())},1e3)},Auth.prototype.listenclick=function(){var n=this,o=$(".sms-captcha-btn"),t=$('.signup-group input[name="telephone"]');o.click(function(){var o=t.val();o?console.log(o):messageBox.showInfo("请输入手机号码"),xfzajax.get({url:"/account/send_phone/",data:{telephone:o},success:function(o){200===o.code&&n.reclick()},fail:function(o){console.log(o)}})})},Auth.prototype.signup=function(){$(".submit-btn").click(function(){var o=$(".tlp"),n=$(".names"),t=$(".pwd1"),e=$(".pwd2"),s=$(".dxyzm"),i=$(".imgyzm"),c=o.val(),a=n.val(),l=t.val(),r=e.val(),u=s.val(),p=i.val();console.log(c),console.log(a),console.log(l),console.log(r),console.log(u),console.log(p),c?a?l!==r?window.messageBox.showInfo("两次密码不一致！"):xfzajax.post({url:"/account/register/",data:{telephone:c,username:a,password1:l,password2:r,img_captcha:p,sms_captcha:u},success:function(o){200===o.code&&(messageBox.showInfo("账户注册成功，请重新登录！"),window.setTimeout(5),window.location.reload())},fail:function(o){console.log(o)}}):window.messageBox.showInfo("请输入用户名！"):window.messageBox.showInfo("请输入手机号码！！")})},Auth.prototype.lshover=function(){$(".user-more-boxs")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
