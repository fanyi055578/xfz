function News(){}News.prototype.listenDeleteEvent=function(){console.log("xxxxxx"),$(".delete-btn").click(function(){event.preventDefault();var t=$(this).attr("data-news-id");xfzajax.post({url:"/cms/delete_news/",data:{pk:t},success:function(t){200===t.code&&window.location.reload()}})})},News.prototype.listenEditnews=function(){$(".edit-btn").click(function(t){t.preventDefault();var e=$(this).attr("data-news-id");console.log(e),xfzajax.post({url:"/cms/edit_news/",data:{pk:e},success:function(t){200===t.code&&(console.log("chenggong"),window.location.reload())},fail:function(t){}})})},News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenSubmitEvent=function(){var t=$("#submit-btn");console.log("heheheh"),t.click(function(t){t.preventDefault();var e=$(this).attr("data-news-id"),n=$("input[name='title']").val(),o=$("select[name='category']").val(),i=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),s=window.ue.getContent();url="/cms/tests/",xfzajax.post({url:url,data:{title:n,category:o,desc:i,thumbnail:a,content:s,pk:e},success:function(t){200===t.code&&xfzalert.alertSuccess("恭喜！新闻发表成功！",function(){window.location.reload()})}})})},News.prototype.run=function(){this.initUEditor(),this.listenDeleteEvent(),this.listenSubmitEvent()},$(function(){(new News).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRlX25ld3MuanMiXSwibmFtZXMiOlsiTmV3cyIsInByb3RvdHlwZSIsImxpc3RlbkRlbGV0ZUV2ZW50IiwiY29uc29sZSIsImxvZyIsIiQiLCJjbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJwayIsInRoaXMiLCJhdHRyIiwieGZ6YWpheCIsInBvc3QiLCJ1cmwiLCJkYXRhIiwic3VjY2VzcyIsInJlc3VsdCIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwibGlzdGVuRWRpdG5ld3MiLCJmYWlsIiwiZXJyb3IiLCJpbml0VUVkaXRvciIsInVlIiwiVUUiLCJnZXRFZGl0b3IiLCJpbml0aWFsRnJhbWVIZWlnaHQiLCJzZXJ2ZXJVcmwiLCJsaXN0ZW5TdWJtaXRFdmVudCIsInN1Ym1pdEJ0biIsInRpdGxlIiwidmFsIiwiY2F0ZWdvcnkiLCJkZXNjIiwidGh1bWJuYWlsIiwiY29udGVudCIsImdldENvbnRlbnQiLCJ4ZnphbGVydCIsImFsZXJ0U3VjY2VzcyIsInJ1biJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsUUFLVEEsS0FBS0MsVUFBVUMsa0JBQW9CLFdBQy9CQyxRQUFRQyxJQUFJLFVBQ0NDLEVBQUUsZUFFUkMsTUFBTSxXQUNSQyxNQUFNQyxpQkFDUCxJQUNJQyxFQURNSixFQUFFSyxNQUNDQyxLQUFLLGdCQUNsQkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFNLG9CQUNOQyxLQUFPLENBQ0hOLEdBQUtBLEdBRVRPLFFBQVcsU0FBVUMsR0FDRyxNQUFqQkEsRUFBYSxNQUNaQyxPQUFPQyxTQUFTQyxlQU9wQ3BCLEtBQUtDLFVBQVVvQixlQUFpQixXQUNsQmhCLEVBQUUsYUFDUkMsTUFBTSxTQUFVQyxHQUNoQkEsRUFBTUMsaUJBQ04sSUFDSUMsRUFETUosRUFBRUssTUFDQ0MsS0FBSyxnQkFDbEJSLFFBQVFDLElBQUlLLEdBQ1pHLFFBQVFDLEtBQUssQ0FDVEMsSUFBTSxrQkFDTkMsS0FBTyxDQUNITixHQUFLQSxHQUVUTyxRQUFVLFNBQVVDLEdBQ0ssTUFBakJBLEVBQWEsT0FDYmQsUUFBUUMsSUFBSSxhQUNYYyxPQUFPQyxTQUFTQyxXQUl6QkUsS0FBTyxTQUFVQyxVQU83QnZCLEtBQUtDLFVBQVV1QixZQUFjLFdBQ3pCTixPQUFPTyxHQUFLQyxHQUFHQyxVQUFVLFNBQVMsQ0FDOUJDLG1CQUFzQixJQUN0QkMsVUFBYSxzQkFLckI3QixLQUFLQyxVQUFVNkIsa0JBQW9CLFdBQy9CLElBQUlDLEVBQVkxQixFQUFFLGVBQ2xCRixRQUFRQyxJQUFJLFdBQ1oyQixFQUFVekIsTUFBTSxTQUFVQyxHQUN0QkEsRUFBTUMsaUJBQ04sSUFDSUMsRUFETUosRUFBRUssTUFDQ0MsS0FBSyxnQkFFZHFCLEVBQVEzQixFQUFFLHVCQUF1QjRCLE1BQ2pDQyxFQUFXN0IsRUFBRSwyQkFBMkI0QixNQUN4Q0UsRUFBTzlCLEVBQUUsc0JBQXNCNEIsTUFDL0JHLEVBQVkvQixFQUFFLDJCQUEyQjRCLE1BQ3pDSSxFQUFVbkIsT0FBT08sR0FBR2EsYUFDeEJ4QixJQUFNLGNBQ05GLFFBQVFDLEtBQUssQ0FDVEMsSUFBT0EsSUFDUEMsS0FBUSxDQUNKaUIsTUFBU0EsRUFDVEUsU0FBWUEsRUFDWkMsS0FBUUEsRUFDUkMsVUFBYUEsRUFDYkMsUUFBV0EsRUFDWDVCLEdBQU1BLEdBRVZPLFFBQVcsU0FBVUMsR0FDSyxNQUFuQkEsRUFBYSxNQUNac0IsU0FBU0MsYUFBYSxhQUFhLFdBQy9CdEIsT0FBT0MsU0FBU0MsaUJBVXhDcEIsS0FBS0MsVUFBVXdDLElBQU0sV0FDaEIvQixLQUFLYyxjQUNMZCxLQUFLUixvQkFDTFEsS0FBS29CLHFCQUtWekIsRUFBRSxZQUNhLElBQUlMLE1BQ1Z5QyIsImZpbGUiOiJ3cml0ZV9uZXdzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIE5ld3MoKSB7XHJcblxyXG59XHJcblxyXG5cclxuTmV3cy5wcm90b3R5cGUubGlzdGVuRGVsZXRlRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgY29uc29sZS5sb2coJ3h4eHh4eCcpO1xyXG4gICAgdmFyIGRlbEJ0biA9ICQoXCIuZGVsZXRlLWJ0blwiKTtcclxuXHJcbiAgICBkZWxCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciBidG4gPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBwayA9IGJ0bi5hdHRyKCdkYXRhLW5ld3MtaWQnKTtcclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzonL2Ntcy9kZWxldGVfbmV3cy8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAgJ3BrJzpwayxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXT09PTIwMClcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgICApXHJcbiAgICB9KVxyXG59O1xyXG5cclxuTmV3cy5wcm90b3R5cGUubGlzdGVuRWRpdG5ld3MgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIEJ0biA9ICQoXCIuZWRpdC1idG5cIik7XHJcbiAgICBCdG4uY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB2YXIgQnRuID0gJCh0aGlzKTtcclxuICAgICAgICB2YXIgcGsgPSBCdG4uYXR0cignZGF0YS1uZXdzLWlkJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2cocGspO1xyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOicvY21zL2VkaXRfbmV3cy8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAgJ3BrJzpwa1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddPT09MjAwKXtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2hlbmdnb25nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ2ZhaWwnOmZ1bmN0aW9uIChlcnJvcikge1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG59O1xyXG5cclxuTmV3cy5wcm90b3R5cGUuaW5pdFVFZGl0b3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB3aW5kb3cudWUgPSBVRS5nZXRFZGl0b3IoJ2VkaXRvcicse1xyXG4gICAgICAgICdpbml0aWFsRnJhbWVIZWlnaHQnOiA0MDAsXHJcbiAgICAgICAgJ3NlcnZlclVybCc6ICcvdWVkaXRvci91cGxvYWQvJ1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5cclxuTmV3cy5wcm90b3R5cGUubGlzdGVuU3VibWl0RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc3VibWl0QnRuID0gJChcIiNzdWJtaXQtYnRuXCIpO1xyXG4gICAgY29uc29sZS5sb2coJ2hlaGVoZWgnKTtcclxuICAgIHN1Ym1pdEJ0bi5jbGljayhmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciBidG4gPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBwayA9IGJ0bi5hdHRyKCdkYXRhLW5ld3MtaWQnKTtcclxuXHJcbiAgICAgICAgdmFyIHRpdGxlID0gJChcImlucHV0W25hbWU9J3RpdGxlJ11cIikudmFsKCk7XHJcbiAgICAgICAgdmFyIGNhdGVnb3J5ID0gJChcInNlbGVjdFtuYW1lPSdjYXRlZ29yeSddXCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBkZXNjID0gJChcImlucHV0W25hbWU9J2Rlc2MnXVwiKS52YWwoKTtcclxuICAgICAgICB2YXIgdGh1bWJuYWlsID0gJChcImlucHV0W25hbWU9J3RodW1ibmFpbCddXCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBjb250ZW50ID0gd2luZG93LnVlLmdldENvbnRlbnQoKTtcclxuICAgICAgICB1cmwgPSAnL2Ntcy90ZXN0cy8nO1xyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOiB1cmwsXHJcbiAgICAgICAgICAgICdkYXRhJzoge1xyXG4gICAgICAgICAgICAgICAgJ3RpdGxlJzogdGl0bGUsXHJcbiAgICAgICAgICAgICAgICAnY2F0ZWdvcnknOiBjYXRlZ29yeSxcclxuICAgICAgICAgICAgICAgICdkZXNjJzogZGVzYyxcclxuICAgICAgICAgICAgICAgICd0aHVtYm5haWwnOiB0aHVtYm5haWwsXHJcbiAgICAgICAgICAgICAgICAnY29udGVudCc6IGNvbnRlbnQsXHJcbiAgICAgICAgICAgICAgICAncGsnOiBwa1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddID09PSAyMDApe1xyXG4gICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmFsZXJ0U3VjY2Vzcygn5oGt5Zac77yB5paw6Ze75Y+R6KGo5oiQ5Yqf77yBJyxmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5cclxuXHJcbk5ld3MucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgICB0aGlzLmluaXRVRWRpdG9yKCk7XHJcbiAgICAgdGhpcy5saXN0ZW5EZWxldGVFdmVudCgpO1xyXG4gICAgIHRoaXMubGlzdGVuU3VibWl0RXZlbnQoKTtcclxuICAgICAvLyB0aGlzLmxpc3RlbkVkaXRuZXdzKCk7XHJcbn07XHJcblxyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbmV3cyA9IG5ldyBOZXdzKCk7XHJcbiAgICBuZXdzLnJ1bigpO1xyXG59KTsiXX0=
